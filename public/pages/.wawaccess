wawaccess do
  
  # We don't inherits static configuration
  inherits false
  
  # By default, we deny the call
  strategy :deny_all
  
  # When a folder is requested, find the associated index file
  serve directory do |url, realpath, wawaccess, env|
    #puts "Serving directory #{url} #{realpath}"
    wawaccess.apply "#{url}/index.wtpl", env
  end

  # We serve .wtpl files using wlang
  serve file(:extension => '.wtpl') do |url, realpath, wawaccess, env|
    #puts "Serving .wtpl file #{url} with #{realpath} and #{url == 'pages/index.wtpl'}"
    context = {"title"       => "UCL ACM Student Chapter",
               "pagerequest" => url,
               "theclass"    => (url == 'pages/index.wtpl' ? 'index' : 'other'),
               "env"         => Waw.env,
               "request"     => Waw.request, 
               "response"    => Waw.response,
               "session"     => Waw.session}
    Waw.resources.each {|k, v| context[k.to_s] = v}
    
    contents = WLang.file_instantiate(File.join(wawaccess.folder, '../templates/layout.wtpl'), context)
    [200, {'Content-Type' => 'text/html'}, [contents]]
  end
  
  # When the file cannot be found
  notfound do |url, realpath, wawaccess, env|
    #puts "Notfound #{url}"
    if /\.wtpl$/ =~ url
      [404, {'Content-Type' => 'text/plain'}, ["Requested url #{url} does not exists"]]
    else
      wawaccess.apply "#{url}.wtpl", env
    end
  end
  
end