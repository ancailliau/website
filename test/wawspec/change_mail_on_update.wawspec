scenario __FILE__ do
  people_mail = "test-user@acmscw.be"
  next_mail   = "test-user2@acmscw.be"
  people = {:mail       => people_mail,
            :password   => "mypassword", 
            :newsletter => "true"}
  Waw.resources.business.people.drop_people(people_mail, next_mail)
  Waw.resources.model.people.insert(people.merge(:adminlevel => 0))
  AcmScW::Tools::MailServer.clean(people_mail, next_mail)
  
  # Start on the root
  go Waw.config.web_base
  
  # invoke the subscribe_account service
  assert_form_service_invoke "Successful login invocation", {
    :service    => "/webserv/people/login",
    :arguments  => {:mail => people[:mail], :password => people[:password]},
    :result     => "success/ok"
  }
  
  # Now i can go to the account update page
  assert_not_404 "/people/update_account"

  # First update is ok
  assert_form_service_invoke "Successful update service invocation", {
    :service    => "/webserv/people/update_account",
    :arguments  => people.merge(:password_confirm => people[:password]),
    :result     => "success/ok"
  }
  
  # Now i can go to the account update page
  assert_not_404 "/people/update_account"
  
  # First update is ok
  assert_form_service_invoke "Successful update service invocation", {
    :service    => "/webserv/people/update_account",
    :arguments  => people.merge(:mail => next_mail, :password_confirm => people[:password]),
    :result     => "success/activation_required"
  }
  assert_i_see Waw.resources.messages.activation_required
  
  # And here was the bug, what happens if I go to the update account page now?
  assert_not_404 "/people/update_account"
  assert_i_see Waw.resources.messages.user_must_be_logged
end